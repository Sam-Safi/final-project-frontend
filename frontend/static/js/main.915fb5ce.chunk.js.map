{"version":3,"sources":["components/Login.js","components/Signup.js","App.js","serviceWorker.js","index.js"],"names":["Login","state","email","password","handleChange","bind","handleSubmit","event","this","setState","target","name","value","alert","preventDefault","myHeaders","Headers","append","urlencoded","URLSearchParams","fetch","method","headers","body","redirect","then","response","json","result","console","log","props","catch","error","onSubmit","className","type","placeholder","onChange","id","htmlFor","href","Component","SignUp","firstname","lastname","firstnameErrorMsg","lastnameErrorMsg","emailErrorMsg","passwordErrorMsg","formValid","checkValidation","text","App","to","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.915fb5ce.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  handleSubmit(event) {\n    alert(\n      \"valid user profile found, adding profile to session: \" + this.state.value\n    );\n    event.preventDefault();\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\n    const urlencoded = new URLSearchParams();\n    urlencoded.append(\"email\", this.state.email);\n    urlencoded.append(\"password\", this.state.password);\n\n    const requestOptions = {\n      method: \"POST\",\n      headers: myHeaders,\n      body: urlencoded,\n      redirect: \"follow\"\n    };\n\n    fetch(\"/user/login\", requestOptions)\n      .then(response => response.json())\n      .then(result => {\n        console.log(result);\n        console.log(this.props);\n        //redirect here\n      })\n      .catch(error => console.log(\"error\", error));\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <h3>Sign In</h3>\n\n        <div className=\"form-group\">\n          <label>Email address</label>\n          <input\n            type=\"email\"\n            className=\"form-control\"\n            placeholder=\"Enter email\"\n            name=\"email\"\n            value={this.state.email}\n            onChange={this.handleChange}\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label>Password</label>\n          <input\n            type=\"password\"\n            className=\"form-control\"\n            placeholder=\"Enter password\"\n            name=\"password\"\n            value={this.state.password}\n            onChange={this.handleChange}\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <div className=\"custom-control custom-checkbox\">\n            <input\n              type=\"checkbox\"\n              className=\"custom-control-input\"\n              id=\"customCheck1\"\n            />\n            <label className=\"custom-control-label\" htmlFor=\"customCheck1\">\n              Remember me\n            </label>\n          </div>\n        </div>\n\n        <button type=\"submit\" className=\"btn btn-primary btn-block\">\n          Submit\n        </button>\n        <p className=\"forgot-password text-right\">\n          Forgot <a href=\"#\">password?</a>\n        </p>\n      </form>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class SignUp extends Component {\n  constructor() {\n    super();\n    this.state = {\n      firstname: \"\",\n      lastname: \"\",\n      email: \"\",\n      password: \"\",\n      firstnameErrorMsg: \"\",\n      lastnameErrorMsg: \"\",\n      emailErrorMsg: \"\",\n      passwordErrorMsg: \"\",\n      formValid: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    console.log(event.target.value);\n    this.setState({\n      [event.target.name]: event.target.value,\n      [`${event.target.name}ErrorMsg`]: \"\"\n    });\n  }\n\n  checkValidation() {\n    if (!this.state.firstname) {\n      this.setState({ firstnameErrorMsg: \"Please specify First name \" });\n    }\n    if (!this.state.lastname) {\n      this.setState({ lastnameErrorMsg: \"Please specify Last name \" });\n    }\n    if (!this.state.email) {\n      this.setState({ emailErrorMsg: \"Please specify Enter email \" });\n    }\n    if (!this.state.password) {\n      this.setState({ passwordErrorMsg: \"Please specify Enter password \" });\n    }\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.checkValidation();\n\n    if (!this.state.formValid) {\n      return;\n    }\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n    myHeaders.append(\"Authorization\", \"Basic U2FtOmRvZG8=\");\n\n    const urlencoded = new URLSearchParams();\n    urlencoded.append(\"firstname\", this.state.firstname);\n    urlencoded.append(\"lastname\", this.state.lastname);\n    urlencoded.append(\"email\", this.state.email);\n    urlencoded.append(\"password\", this.state.password);\n\n    const requestOptions = {\n      method: \"POST\",\n      headers: myHeaders,\n      body: urlencoded,\n      redirect: \"follow\"\n    };\n\n    fetch(\"/public/newUser\", requestOptions)\n      .then(response => response.text())\n      .then(result => console.log(result))\n      .catch(error => console.log(\"error\", error));\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <h3>Sign Up</h3>\n\n        <div className=\"form-group\">\n          <label>First name</label>\n          <input\n            type=\"text\"\n            className={`form-control ${this.state.firstnameErrorMsg &&\n              \"is-invalid\"}`}\n            placeholder=\"First name\"\n            name=\"firstname\"\n            value={this.state.firstname}\n            onChange={this.handleChange}\n          />\n          <div className=\"invalid-feedback\">{this.state.firstnameErrorMsg}</div>\n        </div>\n\n        <div className=\"form-group\">\n          <label>Last name</label>\n          <input\n            type=\"text\"\n            className={`form-control ${this.state.lastnameErrorMsg &&\n              \"is-invalid\"}`}\n            placeholder=\"Last name\"\n            name=\"lastname\"\n            value={this.state.lastname}\n            onChange={this.handleChange}\n          />\n          <div className=\"invalid-feedback\">{this.state.lastnameErrorMsg}</div>\n        </div>\n\n        <div className=\"form-group\">\n          <label>Email address</label>\n          <input\n            type=\"email\"\n            className={`form-control ${this.state.emailErrorMsg &&\n              \"is-invalid\"}`}\n            placeholder=\"Enter email\"\n            name=\"email\"\n            value={this.state.email}\n            onChange={this.handleChange}\n          />\n          <div className=\"invalid-feedback\">{this.state.emailErrorMsg}</div>\n        </div>\n\n        <div className=\"form-group\">\n          <label>Password</label>\n          <input\n            type=\"password\"\n            className={`form-control ${this.state.passwordErrorMsg &&\n              \"is-invalid\"}`}\n            placeholder=\"Enter password\"\n            name=\"password\"\n            value={this.state.password}\n            onChange={this.handleChange}\n          />\n          <div className=\"invalid-feedback\">{this.state.passwordErrorMsg}</div>\n        </div>\n\n        <button type=\"submit\" className=\"btn btn-primary btn-block\">\n          Sign Up\n        </button>\n        <p className=\"forgot-password text-right\">\n          Already registered <a href=\"#\">sign in?</a>\n        </p>\n      </form>\n    );\n  }\n}\n","import React from \"react\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport Login from \"./components/Login\";\nimport SignUp from \"./components/Signup\";\n// import BookList, { BookList } from \"./components/BookList\"\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <nav className=\"navbar navbar-expand-lg navbar-light fixed-top\">\n          <div className=\"container\">\n            <Link className=\"navbar-brand\" to={\"/sign-in\"}>\n              S&S Book Store\n            </Link>\n\n            <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n              <ul className=\"navbar-nav ml-auto\">\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to={\"/sign-in\"}>\n                    Login\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to={\"/sign-up\"}>\n                    Sign up\n                  </Link>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </nav>\n\n        <div className=\"auth-wrapper\">\n          <div className=\"auth-inner\">\n            <Switch>\n              <Route exact path=\"/\" component={Login} />\n              <Route path=\"/sign-in\" component={Login} />\n              <Route path=\"/sign-up\" component={SignUp} />\n              {/* <Route path=\"/home\" component={BookList} /> */}\n            </Switch>\n          </div>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}